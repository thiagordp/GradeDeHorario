//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta
//     As alterações neste arquivo serão perdidas se o código for recriado
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class InfraestruturaRegraNegocio
{
    InfraestruturaAcessoDados infraEstrutura;


    //Seleciona todos os espacos
    public List<Modelos.ESPACO> SelecionaTodaInfraEstutura()
    {
        try
        {
            infraEstrutura = new InfraestruturaAcessoDados();

            return infraEstrutura.SelecionaTodaInfraEstutura();
        }
        catch (Exception ex)
        {
            throw new Exception("Erro no método SelecionaTodaEstrutura.\n\nDetalhe: \n\n" + ex.Message);
        }

    }

    public void InsereInfraEstrutura(Modelos.ESPACO espaco)
    {
        try
        {
            if (espaco.CODIGO_ESPACO.Trim() == "")
            {
                throw new Exception("O campo código do espaço não pode ser vazio!");
            }
            if (espaco.CAPACIDADE_ESPACO == 0)
            {
                throw new Exception("A capacidade deve ser maior que zero!");
            }
            if (espaco.TIPO_ESPACO == -1)
            {
                throw new Exception("Selecione um tipo de espaço!");
            }
            if (espaco.NUMERO_PC_ESPACO == 0)
            {
                throw new Exception("O número de computadores deve ser maior que zero!");
            }

            using (Modelos.Entidade contexto = new Modelos.Entidade())
            {
                Modelos.ESPACO espacoExiste = contexto.ESPACO.Find(espaco.CODIGO_ESPACO);

                if (espacoExiste != null)
                {
                    throw new Exception("O espaço com a identificação informada já está cadastrado.");
                }

                contexto.ESPACO.Add(espaco);
                contexto.SaveChanges();
            }
        }
        catch (Exception ex)
        {
            throw new Exception("Erro no método InsereInfraEstrutura\n\nDetalhe:\n\n\t" + ex.Message);
        }
    }
}

