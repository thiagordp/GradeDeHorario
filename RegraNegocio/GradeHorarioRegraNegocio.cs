//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta
//     As alterações neste arquivo serão perdidas se o código for recriado
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace RegraNegocio
{
    public class GradeHorarioRegraNegocio
    {
        /// <summary>
        /// Objeto que referencia o curso da grade atual.
        /// </summary>
        private Modelos.CURSO curso;

        /// <summary>
        /// Objeto de referência à camada de acessos aos dados.
        /// </summary>
        private AcessoDados.GradeHorarioAcessoDados gradeAD;

        /// <summary>
        /// Construtor da classe
        /// </summary> 
        public GradeHorarioRegraNegocio(Modelos.CURSO curso)
        {
            this.curso = curso;
        }

        /// <summary>
        /// Seleciona um conjunto de disciplinas com base no filtro.
        /// </summary>
        /// <param name="filtro">Filtro para a pesquisa, sendo o começo do nome.</param>
        public DataTable SelecionaDisciplina(string filtro)
        {
            try
            {
                gradeAD = new AcessoDados.GradeHorarioAcessoDados(curso);

                return gradeAD.SelecionaDisciplina(filtro);
            }
            catch (Exception ex)
            {
                throw new Exception("Erro no método " + System.Reflection.MethodBase.GetCurrentMethod().Name + "\n\nDetalhe:\n\n" + ex.Message);
            }
        }

        /// <summary>
        /// Seleciona um conjunto de professores com base no filtro.
        /// </summary>
        /// <param name="filtro">Filtro para a pesquisa, sendo o começo do nome.</param>
        /// <returns></returns>
        public DataTable SelecionaProfessor(string filtro)
        {
            try
            {
                gradeAD = new AcessoDados.GradeHorarioAcessoDados(curso);

                return gradeAD.SelecionaProfessor(filtro);
            }
            catch (Exception ex)
            {
                throw new Exception("Erro no método " + System.Reflection.MethodBase.GetCurrentMethod().Name + "\n\nDetalhe:\n\n" + ex.Message);
            }
        }

        /// <summary>
        /// Seleciona um conjunto de espaços com base no filtro.
        /// </summary>
        /// <param name="filtro">Filtro para a pesquisa, sendo o começo do código do espaço.</param>
        /// <returns></returns>
        public DataTable SelecionaEspaco(string filtro)
        {
            try
            {
                gradeAD = new AcessoDados.GradeHorarioAcessoDados(curso);

                return gradeAD.SelecionaEspaco(filtro);
            }
            catch (Exception ex)
            {
                throw new Exception("Erro no método " + System.Reflection.MethodBase.GetCurrentMethod().Name + "\n\nDetalhe:\n\n" + ex.Message);
            }
        }

        public DataTable SelecionaTodoSemestre()
        {
            gradeAD = new AcessoDados.GradeHorarioAcessoDados(curso);

            return gradeAD.SelecionaTodoSemestre();
        }

        public List<DataGridView> CarregaGrade(int curso, int fase, int semestre)
        {
            VerificaCarregaGrade(curso, fase, semestre);

            return null;
        }

        public void VerificaCarregaGrade(int curso, int fase, int semestre)
        {
            if (curso <= 0)
            {
                throw new Exception("Curso inválido!");
            }
            if (fase == 0)
            {
                throw new Exception("É necessário escolher uma fase para carregar uma grade.");
            }
            if (semestre == 0)
            {
                throw new Exception("É necessário escolher um semestre para carregar uma grade.");
            }
        }

        public string SelecionaDetalhe(int hora, int dia, string disciplina, string turma, int prof1, int prof2, int prof3)
        {
            return null;
        }
    }
}

