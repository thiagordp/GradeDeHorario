//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta
//     As alterações neste arquivo serão perdidas se o código for recriado
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;

namespace AcessoDados
{
    public class ProfessorAcessoDados
    {
        //
        // Insere um professor no banco de dados
        //
        public void InsereProfessor() { }

        //
        // Edita os atributos do professor indicado de acordo com os dados fornecidos
        //
        public void EditaProfessor() { }

        //
        // Apaga o professor especificado
        //
        public void ApagaProfessor() { }

        //
        // Retorna todos os professores cadastrados
        //
        public DataTable SelecionaTodoProfessor()
        {
            StringBuilder sql = new StringBuilder();
            SqlCommand comandoSql = new SqlCommand();

            try
            {
                using (SqlConnection conexao = new SqlConnection(Conexao.stringConexao))
                {
                    conexao.Open();

                    sql.Append("SELECT PROFESSOR.*, NOME_DEPARTAMENTO FROM PROFESSOR INNER JOIN DEPARTAMENTO");
                    sql.Append(" ON PROFESSOR.CODIGO_DEPARTAMENTO = DEPARTAMENTO.CODIGO_DEPARTAMENTO");
                    sql.Append(" ORDER BY NOME_PROFESSOR ASC");

                    comandoSql.CommandText = sql.ToString();
                    comandoSql.Connection = conexao;
                    DataTable dadoTabela = new DataTable();

                    dadoTabela.Load(comandoSql.ExecuteReader());

                    return dadoTabela;

                }
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
        }

        //
        // Retorna o professor que contém o nome indicado -- REVER O FILTRO
        //
        public void SelecionaProfessor(string filtro) { }

        //
        // Retorna uma lista com todos os departamentos cadastrados.
        //
        public DataTable SelecionaTodoDepartamento()
        {
            try
            {
                using (Modelos.Entidade contexto = new Modelos.Entidade())
                {
                    List<Modelos.DEPARTAMENTO> dep = contexto.DEPARTAMENTO.ToList();

                    return AcessoDados.UtilidadeAcessoDados.ListToDataTable(dep);
                }
            }
            catch (Exception)
            {
                //
                throw;
            }
        }

    }


}
